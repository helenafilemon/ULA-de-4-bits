module decodificador_display(
	input R0,R1,R2,R3,R4,R5,R6,R7,
	output a0,b0,c0,d0,e0,f0,g0,a1,b1,c1,d1,e1,f1,g1
);
  wire [19:0] aw0;
  wire [22:0] bw0;
  wire [12:0] cw0;
  wire [28:0] dw0;
  wire [12:0] ew0;
  wire [24:0] fw0;
  wire [24:0] gw0;
  wire [4:0] aw1;
  wire [4:0] bw1;
  wire [2:0] cw1;
  wire [6:0] dw1;
  wire [10:0] ew1;
  wire [5:0] fw1;
  wire [6:0] gw1;
  
  and AND1(aw0[0], ~R0, ~R1, ~R2, ~R3, ~R4, ~R5, ~R6, R7);
  and AND2(aw0[1], ~R0, ~R1, ~R2, ~R3, ~R4, R5, ~R6, ~R7);
  and AND3(aw0[2], ~R0, ~R1, ~R2, ~R3, R4, ~R5, R6, R7);
  and AND4(aw0[3], ~R0, ~R1, ~R2, ~R3, R4, R5, R6, ~R7);
  and AND5(aw0[4], ~R0, ~R1, ~R2, R3, ~R4, R5, ~R6, R7);
  and AND6(aw0[5], ~R0, ~R1, ~R2, R3, R4, ~R5, ~R6, ~R7);
  and AND7(aw0[6], ~R0, ~R1, ~R2, R3, R4, R5, R6, R7);
  and AND8(aw0[7], ~R0, ~R1, R2, ~R3, ~R4, ~R5, R6, ~R7);
  and AND9(aw0[8], ~R0, ~R1, R2, ~R3, R4, ~R5, ~R6, R7);
  and AND10(aw0[9], ~R0, ~R1, R2, ~R3, R4, R5, ~R6, ~R7);
  and AND11(aw0[10], ~R0, ~R1, R2, R3, ~R4, ~R5, R6, R7);
  and AND12(aw0[11], ~R0, ~R1, R2, R3, ~R4, R5, R6, ~R7);
  and AND13(aw0[12], ~R0, ~R1, R2, R3, R4, R5, ~R6, R7);
  and AND14(aw0[13], ~R0, R1, ~R2, ~R3, ~R4, ~R5, ~R6, ~R7);
  and AND15(aw0[14], ~R0, R1, ~R2, ~R3, ~R4, R5, R6, R7);
  and AND16(aw0[15], ~R0, R1, ~R2, ~R3, R4, ~R5, R6, ~R7);
  and AND17(aw0[16], ~R0, R1, ~R2, R3, ~R4, ~R5, ~R6, R7);
  and AND18(aw0[17], ~R0, R1, ~R2, R3, ~R4, R5, ~R6, ~R7);
  and AND19(aw0[18], ~R0, R1, ~R2, R3, R4, ~R5, R6, R7);
  and AND20(aw0[19], ~R0, R1, ~R2, R3, R4, R5, R6, ~R7);
  
  
  and AND1(bw0[0], ~R1, ~R2, ~R3, ~R4, R5, ~R6, R7);
  and AND2(bw0[1], ~R1, ~R2, ~R3, ~R4, R5, R6, ~R7);
  and AND3(bw0[2], ~R1, ~R2, ~R3, R4, R5, R6, R7);
  and AND4(bw0[3], ~R1, ~R2, R3, ~R4, ~R5, ~R6, ~R7);
  and AND5(bw0[4], ~R1, ~R2, R3, R4, ~R5, ~R6, R7);
  and AND6(bw0[5], ~R1, ~R2, R3, R4, ~R5, R6, ~R7);
  and AND7(bw0[6], ~R1, R2, ~R3, ~R4, ~R5, R6, R7);
  and AND8(bw0[7], R2, ~R3, ~R4, R5, ~R6, ~R7);
  and AND9(bw0[8], R2, ~R3, R4, R5, ~R6, R7);
  and AND10(bw0[9], R2, ~R3, R4, R5, R6, ~R7);
  and AND11(bw0[10], R2, R3, ~R4, R5, R6, R7);
  and AND12(bw0[11], R2, R3, R4, ~R5, ~R6, ~R7);
  and AND13(bw0[12], R1, ~R2, ~R3, ~R4, ~R5, ~R6, R7);
  and AND14(bw0[13], R1, ~R2, ~R3, ~R4, ~R5, R6, ~R7);
  and AND15(bw0[14], R1, ~R3, R4, ~R5, R6, R7);
  and AND16(bw0[15], R1, ~R3, R4, R5, ~R6, ~R7);
  and AND17(bw0[16], R1, R3, ~R4, R5, ~R6, R7);
  and AND18(bw0[17], R1, R3, ~R4, R5, R6, ~R7);
  and AND19(bw0[18], R1, R3, R4, R5, R6, R7);
  and AND20(bw0[19], R1, R2, ~R6, ~R7);
  and AND21(bw0[20], R1, R2, R5);
  and AND22(bw0[21], R1, R2, R4);
  and AND23(bw0[22], R1, R2, R3);
  
  and AND1(cw0[0], ~R1, ~R2, ~R3, ~R4, ~R5, R6, ~R7);
  and AND2(cw0[1], ~R1, ~R2, ~R3, R4, R5, ~R6, ~R7);
  and AND3(cw0[2], ~R1, ~R2, R3, ~R4, R5, R6, ~R7);
  and AND4(cw0[3], ~R1, R2, ~R3, ~R4, ~R5, ~R6, ~R7);
  and AND5(cw0[4], R2, ~R3, R4, ~R5, R6, ~R7);
  and AND6(cw0[5], R2, R3, ~R4, R5, ~R6, ~R7);
  and AND7(cw0[6], R2, R3, R4, R5, R6, ~R7);
  and AND8(cw0[7], R1, ~R3, R4, ~R5, ~R6, ~R7);
  and AND9(cw0[8], R1, R3, ~R4, ~R5, R6, ~R7);
  and AND10(cw0[9], R1, R3, R4, R5, ~R6, ~R7);
  and AND11(cw0[10], R1, R2, R5);
  and AND12(cw0[11], R1, R2, R4);
  and AND13(cw0[12], R1, R2, R3);
  
  
  and AND1(dw0[0], ~R1, ~R2, ~R4, ~R5, ~R6, R7);
  and AND2(dw0[1], ~R1, ~R2, ~R3, ~R4, R5, ~R6, ~R7);
  and AND3(dw0[2], ~R2, ~R3, ~R4, R5, R6, R7);
  and AND4(dw0[3], ~R1, ~R2, R4, ~R5, R6, R7);
  and AND5(dw0[4], ~R1, ~R2, ~R3, R4, R5, R6, ~R7);
  and AND6(dw0[5], ~R1, ~R2, R3, ~R4, ~R6, R7);
  and AND7(dw0[6], ~R1, ~R2, R3, R4, ~R5, ~R6, ~R7);
  and AND8(dw0[7], ~R1, ~R2, R3, R4, R6, R7);
  and AND9(dw0[8], ~R1, R2, ~R3, ~R4, ~R5, R6, ~R7);
  and AND10(dw0[9], R2, ~R3, ~R4, R5, ~R6, R7);
  and AND11(dw0[10], R2, R4, ~R5, ~R6, R7);
  and AND12(dw0[11], R2, ~R3, R4, R5, ~R6, ~R7);
  and AND13(dw0[12], R2, ~R3, R4, R5, R6, R7);
  and AND14(dw0[13], R2, R3, ~R4, ~R5, R6, R7);
  and AND15(dw0[14], R2, R3, ~R4, R5, R6, ~R7);
  and AND16(dw0[15], R2, R3, R4, ~R6, R7);
  and AND17(dw0[16], R1, ~R2, ~R3, ~R4, ~R5, ~R6, ~R7);
  and AND18(dw0[17], R1, ~R2, ~R3, ~R4, R6, R7);
  and AND19(dw0[18], R1, ~R3, R4, ~R5, R6, ~R7);
  and AND20(dw0[19], R1, ~R3, R4, R5, ~R6, R7);
  and AND21(dw0[20], R1, R3, ~R4, R5, ~R6, ~R7);
  and AND22(dw0[21], R1, ~R4, R5, R6, R7);
  and AND23(dw0[22], R1, R3, R4, R5, R6, ~R7);
  and AND24(dw0[23], R1, R2, ~R6, R7);
  and AND25(dw0[24], R1, R2, R5);
  and AND26(dw0[25], R1, R2, R4);
  and AND27(dw0[26], R1, R2, R3);
  and AND28(dw0[27], ~R2, R3, ~R4, ~R5, ~R6, R7);
  and AND29(dw0[28], ~R2, R3, R4, ~R5, R6, R7);
    
  
  and AND1(ew0[0], ~R0, ~R1, ~R2, ~R3, ~R4, R5, ~R6);
  and AND2(ew0[1], ~R0, ~R1, ~R2, ~R3, R4, R5, R6);
  and AND3(ew0[2], ~R0, ~R1, ~R2, R3, R4, ~R5, ~R6);
  and AND4(ew0[3], ~R0, ~R1, R2, ~R3, ~R4, ~R5, R6);
  and AND5(ew0[4], ~R0, ~R1, R7);
  and AND6(ew0[5], ~R0, ~R1, R2, ~R3, R4, R5, ~R6);
  and AND7(ew0[6], ~R0, ~R1, R2, R3, ~R4, R5, R6);
  and AND8(ew0[7], ~R0, R1, ~R2, ~R3, ~R4, ~R5, ~R6);
  and AND9(ew0[8], ~R0, ~R2, R7);
  and AND10(ew0[9], ~R0, R1, ~R2, ~R3, R4, ~R5, R6);
  and AND11(ew0[10], ~R0, R1, ~R2, R3, ~R4, R5, ~R6);
  and AND12(ew0[11], ~R0, R1, ~R2, R3, R4, R5, R6);
  and AND13(ew0[12], ~R0, ~R3, ~R4, ~R5, R7);
  
  
  and AND1(fw0[0], ~R0, ~R1, ~R2, ~R3, ~R4, ~R5, R6);
  and AND2(fw0[1], ~R0, ~R1, ~R2, ~R3, R4, R5, ~R6);
  and AND3(fw0[2], ~R0, ~R1, ~R2, R3, ~R4, R5, R6);
  and AND4(fw0[3], ~R0, ~R1, R2, ~R3, ~R4, ~R5, ~R6);
  and AND5(fw0[4], ~R0, ~R1, R2, ~R3, R4, ~R5, R6);
  and AND6(fw0[5], ~R0, ~R1, R2, R3, ~R4, ~R5, R6, R7);
  and AND7(fw0[6], ~R0, ~R1, R2, R3, ~R4, R5, ~R6);
  and AND8(fw0[7], ~R0, ~R1, R2, R3, R4, R5, R6);
  and AND9(fw0[8], ~R0, R1, ~R2, ~R3, R4, ~R5, ~R6);
  and AND10(fw0[9], ~R0 & R1 & ~R2 & R3 & ~R4 & ~R5 & R6);
  and AND11(fw0[10], ~R0, R1, ~R2, R3, R4, R5, ~R6);
  and AND12(fw0[11], ~R0, R2, ~R3, ~R4, ~R5, ~R6, R7);
  and AND13(fw0[12], ~R0, ~R1, ~R2, ~R3, ~R4, ~R5, R7);
  and AND14(fw0[13], ~R0, ~R2, ~R3, ~R4, R6, R7);
  and AND15(fw0[14], ~R0, ~R1, ~R2, ~R3, ~R5, R6, R7);
  and AND16(fw0[15], ~R0, ~R1, ~R2, R3, ~R4, ~R6, R7);
  and AND17(fw0[16], ~R0, ~R1, ~R2, R3, R4, R6, R7);
  and AND18(fw0[17], ~R0, ~R1, R2, ~R3, ~R4, ~R6, R7);
  and AND19(fw0[18], ~R0, ~R1, R2, ~R3, ~R5, ~R6, R7);
  and AND20(fw0[19], ~R0, ~R1, R2, ~R3, R4, R6, R7);
  and AND21(fw0[20], ~R0, ~R1, R2, R3, R4, ~R6, R7);
  and AND22(fw0[21], ~R0, ~R2, ~R3, R4, R5, ~R6, R7);
  and AND23(fw0[22], ~R0, ~R2, R3, ~R4, ~R5, ~R6, R7);
  and AND24(fw0[23], ~R0, ~R2, ~R4, R5, R6, R7);
  and AND25(fw0[24], ~R0, ~R2, R3, R4, ~R5, R6, R7);
  
  
  
  and AND1(gw0[0], ~R0, ~R1, ~R2, ~R3, ~R4, ~R5, ~R6);
  and AND2(gw0[1], ~R0, ~R2, ~R3, ~R4, R5, R6, R7);
  and AND3(gw0[2], ~R0, ~R1, ~R2, ~R3, R4, ~R5, R6);
  and AND4(gw0[3], ~R0, ~R1, ~R2, R3, ~R4, R5, ~R6);
  and AND5(gw0[4], ~R0, ~R1, ~R2, R3, R4, R5, R6);
  and AND6(gw0[5], ~R0, ~R1, R2, ~R3, ~R4, R5, ~R6, R7);
  and AND7(gw0[6], ~R0, ~R1, R2, ~R3, R4, ~R5, ~R6);
  and AND8(gw0[7], ~R0, ~R1, R2, ~R3, R4, R5, R6, R7);
  and AND9(gw0[8], ~R0, ~R1, R2, R3, ~R4, ~R5, R6);
  and AND10(gw0[9], ~R0, ~R1, R2, R3, R4, R5, ~R6);
  and AND11(gw0[10], ~R0, R1, ~R2, ~R3, ~R4, R6, R7);
  and AND12(gw0[11], ~R0, R1, ~R2, ~R3, ~R4, R5, R6);
  and AND13(gw0[12], ~R0, R1, ~R2, ~R3, R4, R5, ~R6, R7);
  and AND14(gw0[13], ~R0, R1, ~R2, R3, ~R4, ~R5, ~R6);
  and AND15(gw0[14], ~R0, R1, ~R2, ~R4, R5, R6, R7);
  and AND16(gw0[15], ~R0, R1, ~R2, R3, R4, ~R5, R6);
  and AND17(gw0[16], ~R0, R1, R2, ~R3, ~R4, ~R5, ~R6, R7);
  and AND18(gw0[17], ~R0, ~R1, ~R2, ~R4, ~R5, ~R6, R7);
  and AND19(gw0[18], ~R0, ~R1, ~R2, R4, ~R5, R6, R7);
  and AND20(gw0[19], ~R0, ~R1, R2, R4, ~R5, ~R6, R7);
  and AND21(gw0[20], ~R0, ~R1, R2, R3, R4, ~R6, R7);
  
  
  and AND1(aw1[0], ~R0, ~R1, ~R3, R4, R6);
  and AND2(aw1[1], ~R0, ~R1, ~R3, R4, R5);
  and AND3(aw1[2], ~R0, ~R1, ~R2, R3, ~R4, ~R5);
  and AND4(aw1[3], ~R0, ~R1, R2, ~R3, R4);
  and AND5(aw1[4], ~R0, ~R1, R3, ~R4, ~R5, ~R6);
  
  
  and AND1(bw1[0], ~R0, ~R1, R2, R3, R6);
  and AND2(bw1[1], ~R0, ~R1, R2, R3, R5);
  and AND3(bw1[2], ~R0, ~R1, R2, R3, R4);
  and AND4(bw1[3], ~R0, R1, ~R2, ~R3, ~R4, ~R5);
  and AND5(bw1[4], ~R0, R1, ~R2, ~R3, ~R4, ~R6);
  
  
  and AND1(cw1[0], ~R0, ~R1, ~R2, R3, ~R4, R5);
  and AND2(cw1[1], ~R0, ~R1, ~R2, R3, R4, ~R5);
  and AND3(cw1[2], ~R0, ~R1, ~R2, R3, R5, ~R6);
  
  
  and AND1(dw1[0], ~R0, ~R1, ~R2, R3, ~R4, ~R5);
  and AND2(dw1[1], ~R0, ~R1, R2, ~R3, R4);
  and AND3(dw1[2], ~R0, ~R1, R3, ~R4, ~R5, ~R6);
  and AND4(dw1[3], ~R0, R1, ~R2, ~R3, R5, R6);
  and AND5(dw1[4], ~R0, R1, ~R2, ~R3, R4);
  and AND6(dw1[5], ~R0, ~R1, ~R3, R4, R6);
  and AND7(dw1[6], ~R0, ~R1, ~R3, R4, R5);
  
  
  and AND1(ew1[0], ~R0, ~R1, R3, ~R4, ~R5);
  and AND2(ew1[1], ~R0, ~R2, R4, R5, R6);
  and AND3(ew1[2], ~R0, ~R1, R2, ~R4);
  and AND4(ew1[3], ~R0, ~R1, R2, ~R5);
  and AND5(ew1[4], ~R0, R1, ~R2, ~R3, R5, R6);
  and AND6(ew1[5], ~R0, R1, ~R2, ~R3, R4);
  and AND7(ew1[6], ~R0, R1, ~R2, R4, R6);
  and AND8(ew1[7], ~R0, R1, ~R2, R4, R5);
  and AND9(ew1[8], ~R0, R2, ~R3, ~R4, ~R5);
  and AND10(ew1[9], ~R0, ~R1, ~R3, R4, R6);
  and AND11(ew1[10], ~R0, ~R1, ~R3, R4, R5);
  
  
  and AND1(fw1[0], ~R0, ~R1, ~R2, R3);
  and AND2(fw1[1], ~R0, ~R1, R2, ~R3, ~R4);
  and AND3(fw1[2], ~R0, R1, ~R2, ~R3, R5, R6);
  and AND4(fw1[3], ~R0, R1, ~R2, ~R3, R4);
  and AND5(fw1[4], ~R0, R1, ~R2, ~R3, R4);
  and AND6(fw1[5], ~R0, ~R1, ~R2, R4, R5);
  
  
  and AND1(gw1[0], ~R1, ~R2, ~R3);
  and AND2(gw1[1], ~R1, ~R2, ~R4, ~R5);
  and AND3(gw1[2], R1, R2, R5);
  and AND4(gw1[3], R1, R2, R3);
  and AND5(gw1[4], ~R2, ~R3, R5, R6);
  and AND6(gw1[5], R1, ~R3, R4);
  
  or (g1, gw1[0], gw1[1], gw1[2], gw1[3], gw1[4], gw1[5], R0);
  or (f1, fw1[0], fw1[1], fw1[2], fw1[3], fw1[4], fw1[5]);
  or (e1, ew1[0], ew1[1], ew1[2], ew1[3], ew1[4], ew1[5], ew1[6], ew1[7], ew1[8], ew1[9], ew1[10]);
  or (d1, dw1[0], dw1[1], dw1[2], dw1[3], dw1[4], dw1[5], dw1[6]); 
  or (c1, cw1[0], cw1[1], cw1[2]); 
  or (b1, bw1[0], bw1[1], bw1[2], bw1[3], bw1[4]);
  or (a1, aw1[0], aw1[1], aw1[2], aw1[3], aw1[4]);
  or (g0, gw0[0], gw0[1], gw0[2], gw0[3], gw0[4], gw0[5], gw0[6], gw0[7], gw0[8], gw0[9], gw0[10], gw0[11], gw0[12], gw0[13], gw0[14], gw0[15], gw0[16], gw0[17], gw0[18], gw0[19], gw0[20]); 
  or (f0, fw0[0], fw0[1], fw0[2], fw0[3], fw0[4], fw0[5], fw0[6], fw0[7], fw0[8], fw0[9], fw0[10], fw0[11], fw0[12], fw0[13], fw0[14], fw0[15], fw0[16], fw0[17], fw0[18], fw0[19], fw0[20], fw0[21], fw0[22], fw0[23], fw0[24]);
  or (e0, ew0[0], ew0[1], ew0[2], ew0[3], ew0[4], ew0[5], ew0[6], ew0[7], ew0[8], ew0[9], ew0[10], ew0[11], ew0[12]);
  or (d0, dw0[0], dw0[1], dw0[2], dw0[3], dw0[4], dw0[5], dw0[6], dw0[7], dw0[8], dw0[9], dw0[10], dw0[11], dw0[12], dw0[13], dw0[14], dw0[15], dw0[16], dw0[17], dw0[18], dw0[19], dw0[20], dw0[21], dw0[22], dw0[23], dw0[24], dw0[25], dw0[26], dw0[27], dw0[28], R0);
  or (c0, cw0[0], cw0[1], cw0[2], cw0[3], cw0[4], cw0[5], cw0[6], cw0[7], cw0[8], cw0[9], cw0[10], cw0[11], cw0[12], R0);
  or (b0, bw0[0], bw0[1], bw0[2], bw0[3], bw0[4], bw0[5], bw0[6], bw0[7], bw0[8], bw0[9], bw0[10], bw0[11], bw0[12], bw0[13], bw0[14], bw0[15], bw0[16], bw0[17], bw0[18], bw0[19], bw0[20], bw0[21], bw0[22], R0);
  or (a0, aw0[0], aw0[1], aw0[2], aw0[3], aw0[4], aw0[5], aw0[6], aw0[7], aw0[8], aw0[9], aw0[10], aw0[11], aw0[12], aw0[13], aw0[14], aw0[15], aw0[16], aw0[17], aw0[18], aw0[19]);

endmodule
